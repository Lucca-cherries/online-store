<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace属性：用于指定当前的映射文件和哪个接口进行映射，需要制定接口的文件路径，需要标注包的完整路径结构-->
<mapper namespace="com.cy.store.mapper.UserMapper">
    <!--自定义映射规则：resultMap标签来完成映射规则的定义 -->
    <!--
        id属性：表示给这个映射负责分配一个唯一的id值，对应的就是resultMap="id属性的值"属性的取值
        type属性：取值是一个类，表示的是数据库中的查询结果与Java中哪个实体类进行结果集的映射
    -->
    <resultMap id="UserEntityMap" type="com.cy.store.entity.User">
        <!--将表的资源和类的属性不一样的字段进行匹配，名称一致的字段可以省略不写-->
        <!--
            配合完成名称不一致的映射：
            column属性：表示表中的资源名称
            property属性：表示类中的属性名称
        -->
        <!--在定义映射规则时主键是不可以省略的 -->
        <id column="uid" property="uid"></id>
        <result column="is_delete" property="isDelete"></result>
        <result column="created_user" property="createdUser"></result>
        <result column="created_time" property="createdTime"></result>
        <result column="modified_user" property="modifiedUser"></result>
        <result column="modified_time" property="modifiedTime"></result>
    </resultMap>

    <!--id属性：表示映射接口中方法的名称，直接在标签的内容部分来编写SQL语句 -->
    <!--
        useGeneratedKeys属性：表示开启某个字段的值递增（主键）
        keyProperty属性：表示将表中的哪个字段作为主键进行递增
    -->
    <insert id="insert" useGeneratedKeys="true" keyProperty="uid">
        INSERT INTO t_user (username, password, salt, phone, email, gender, avatar,
                            is_delete, created_user, created_time, modified_user, modified_time)
        VALUES (#{username}, #{password}, #{salt}, #{phone}, #{email}, #{gender}, #{avatar},
                #{isDelete}, #{createdUser}, #{createdTime}, #{modifiedUser}, #{modifiedTime})
    </insert>

    <select id="findByUsername" resultMap="UserEntityMap">
        SELECT * FROM t_user WHERE username = #{username}
    </select>

    <!-- 名称不一样时无法自动注入数据，需要配置映射-->
    <!-- pathVariable("user") String username-->
    <!-- param("user") String username-->
    <update id="updatePasswordByUid">
        UPDATE t_user
        SET
            password = #{password},
            modified_user = #{modifiedUser},
            modified_time = #{modifiedTime}
        WHERE
                uid = #{uid}
    </update>

    <!-- 根据用户id查询数据  -->
    <select id="findByUid" resultMap="UserEntityMap">
        SELECT *
        FROM t_user
        WHERE uid = #{uid}
    </select>

    <!-- 根据uid更新用户个人资料-->
    <!-- if表示条件判断标签，test接收的是一个返回值为boolean类型的条件
            如果test条件的结果是true则执行if标签内部的语句-->
    <update id="updateInfoByUid">
        UPDATE t_user
        SET
            <if test="phone != null">phone = #{phone},</if>
            <if test="email != null">email = #{email},</if>
            <if test="gender != null">gender = #{gender},</if>
            modified_user = #{modifiedUser},
            modified_time = #{modifiedTime}
        WHERE
            uid = #{uid}
    </update>

    <update id="updateAvatarByUid">
        UPDATE t_user
        SET
            avatar = #{avatar},
            modified_user = #{modifiedUser},
            modified_time = #{modifiedTime}
        WHERE
            uid = #{uid}
    </update>

</mapper>